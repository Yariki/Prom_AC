//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Core Model
//  @ File Name : EllipseSvgObject.cpp
//  @ Date : 3/25/2013
//  @ Author : 
//
//


#include "EllipseSvgObject.h"

EllipseSvgObject::EllipseSvgObject()
{
	m_type = SvgObjectType::EllipseSvg;
}

EllipseSvgObject::~EllipseSvgObject()
{

}


QPoint EllipseSvgObject::getCenter()
{
	return QPoint(m_centerX * m_xFactor,m_centerY * m_yFactor);
}

int EllipseSvgObject::getXRadius()
{
	return (int)(m_radiusX * m_xFactor);
}

int EllipseSvgObject::getYRadius()
{
	return (int)(m_radiusY * m_yFactor);
}

void EllipseSvgObject::Parse(QDomElement &element)
{
	QDomNamedNodeMap mapAttr = element.attributes();
	for(int i = 0; i < mapAttr.count();i++)
	{
		QDomAttr attr = mapAttr.item(i).toAttr();
		if(attr.isNull())
			continue;
		if(attr.name() == "cx")
			m_centerX = attr.value().toInt();
		else if(attr.name() == "cy")
			m_centerY = attr.value().toInt();
		else if(attr.name() == "rx")
			m_radiusX = attr.value().toInt();
		else if(attr.name() == "ry")
			m_radiusY = attr.value().toInt();
	}
}

QString EllipseSvgObject::toString()
{
	return QString("cx=%1 cy=%2 rx=%3 ry=%4").arg(m_centerX).arg(m_centerY).arg(m_radiusX).arg(m_radiusY);
}

void EllipseSvgObject::render(QPainter* canvas)
{
	canvas->drawEllipse(getCenter(),getXRadius(),getYRadius());
}
	
