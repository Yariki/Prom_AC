//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Core Model
//  @ File Name : RectSvgObject.cpp
//  @ Date : 3/25/2013
//  @ Author : 
//
//


#include "RectSvgObject.h"

RectSvgObject::RectSvgObject()
{
	m_type = SvgObjectType::RectSvg;
}

RectSvgObject::~RectSvgObject()
{

}

QPoint RectSvgObject::getPoint()
{
	return QPoint(m_x * m_xFactor,m_y * m_yFactor);
}

int RectSvgObject::getRectWidth()
{
	return (int)(m_widthRect * m_xFactor);
}

int RectSvgObject::getRectHeight()
{
	return (int)(m_heightRect * m_yFactor);
}

void RectSvgObject::Parse(QDomElement &element)
{
	QDomNamedNodeMap mapAttr = element.attributes();
	for(int i = 0; i < mapAttr.count();i++)
	{
		QDomAttr attr = mapAttr.item(i).toAttr();
		if(attr.isNull())
			continue;
		if(attr.name() == "x")
			m_x = (int)attr.value().toFloat();
		else if(attr.name() == "y")
			m_y = (int)attr.value().toFloat();
		else if(attr.name() == "width")
			m_widthRect = (int)attr.value().toFloat();
		else if(attr.name() == "height")
			m_heightRect = (int)attr.value().toFloat();
	}
}

QString RectSvgObject::toString()
{
	return QString("x=%1 y=%2 w=%3 h=%4").arg(m_x).arg(m_y).arg(m_widthRect).arg(m_heightRect);
}

void RectSvgObject::render(QPainter *canvas)
{
	canvas->drawRect(m_x * m_xFactor,m_y * m_yFactor ,m_widthRect * m_xFactor, m_heightRect * m_yFactor);
}